{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\hooks\\\\Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer() {\n  _s();\n\n  const [timeString, setTimeString] = useState(null);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    intervalRef.current = setInterval(() => {\n      const now = new Date();\n      const hours = `0${now.getHours()}`.slice(-2);\n      const minutes = `0${now.getMinutes()}`.slice(-2);\n      const seconds = `0${now.getSeconds()}`.slice(-2);\n      const currentTimeString = `${hours}:${minutes}:${seconds}`;\n      setTimeString(currentTimeString);\n    }, 1000);\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '48px'\n    },\n    children: timeString\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Timer, \"bRRS0m3NeQir84qgM+mHcpFUwIs=\");\n\n_c = Timer;\nexport default _c2 = /*#__PURE__*/React.memo(Timer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Timer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/hooks/Timer.js"],"names":["React","useEffect","useState","useRef","Timer","timeString","setTimeString","intervalRef","current","setInterval","now","Date","hours","getHours","slice","minutes","getMinutes","seconds","getSeconds","currentTimeString","clearInterval","fontSize","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAMK,WAAW,GAAGJ,MAAM,CAAC,IAAD,CAA1B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,WAAW,CAACC,OAAZ,GAAsBC,WAAW,CAAC,MAAM;AACvC,YAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,YAAMC,KAAK,GAAI,IAAGF,GAAG,CAACG,QAAJ,EAAe,EAAnB,CAAqBC,KAArB,CAA2B,CAAC,CAA5B,CAAd;AACA,YAAMC,OAAO,GAAI,IAAGL,GAAG,CAACM,UAAJ,EAAiB,EAArB,CAAuBF,KAAvB,CAA6B,CAAC,CAA9B,CAAhB;AACA,YAAMG,OAAO,GAAI,IAAGP,GAAG,CAACQ,UAAJ,EAAiB,EAArB,CAAuBJ,KAAvB,CAA6B,CAAC,CAA9B,CAAhB;AACA,YAAMK,iBAAiB,GAAI,GAAEP,KAAM,IAAGG,OAAQ,IAAGE,OAAQ,EAAzD;AACAX,MAAAA,aAAa,CAACa,iBAAD,CAAb;AACA,KAPgC,EAO9B,IAP8B,CAAjC;AAQA,WAAO,MAAM;AACZC,MAAAA,aAAa,CAACb,WAAW,CAACC,OAAb,CAAb;AACA,KAFD;AAGA,GAZQ,EAYN,EAZM,CAAT;AAaA,sBAAO;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,cAAmChB;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;GAjBQD,K;;KAAAA,K;AAmBT,kCAAeJ,KAAK,CAACsB,IAAN,CAAWlB,KAAX,CAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\nfunction Timer() {\r\n\tconst [timeString, setTimeString] = useState(null);\r\n\tconst intervalRef = useRef(null);\r\n\tuseEffect(() => {\r\n\t\tintervalRef.current = setInterval(() => {\r\n\t\t\tconst now = new Date();\r\n\t\t\tconst hours = `0${now.getHours()}`.slice(-2);\r\n\t\t\tconst minutes = `0${now.getMinutes()}`.slice(-2);\r\n\t\t\tconst seconds = `0${now.getSeconds()}`.slice(-2);\r\n\t\t\tconst currentTimeString = `${hours}:${minutes}:${seconds}`;\r\n\t\t\tsetTimeString(currentTimeString);\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(intervalRef.current);\r\n\t\t};\r\n\t}, []);\r\n\treturn <div style={{ fontSize: '48px' }}>{timeString}</div>;\r\n}\r\n\r\nexport default React.memo(Timer);\r\n"]},"metadata":{},"sourceType":"module"}