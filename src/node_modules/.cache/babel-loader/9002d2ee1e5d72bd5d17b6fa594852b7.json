{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\corona\\\\context\\\\CoronaProviderV2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { helper } from '../helpers/common';\nimport CoronaContext from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoronaProviderV2 = ({\n  props\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [virus, setVirus] = useState({});\n  const [error, setError] = useState({});\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      const data = api.getDataVirusCorona();\n\n      if (!helper.isEmptyObject(data)) {\n        setVirus(data);\n        setError();\n      } else {\n        setVirus({});\n        setError({\n          cod: 404,\n          mess: `Not found data`\n        });\n      }\n\n      setLoading(false);\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CoronaContext.Provider, {\n    value: {\n      loading: loading,\n      virus: virus,\n      error: error\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this); // CoronaProviderV2.Proptypes = {\n  // \tchildren: Proptypes.node.isRequired\n  // };\n}; // CoronaProviderV2.Proptypes = {\n// \tchildren: Proptypes.node.isRequired\n// };\n\n\n_s(CoronaProviderV2, \"icLBMQzAKU8GxUp2HJk1Rq+Wdu0=\");\n\n_c = CoronaProviderV2;\nexport default _c2 = /*#__PURE__*/React.memo(CoronaProviderV2);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CoronaProviderV2\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/corona/context/CoronaProviderV2.js"],"names":["React","useState","useEffect","api","helper","CoronaContext","CoronaProviderV2","props","loading","setLoading","virus","setVirus","error","setError","getData","data","getDataVirusCorona","isEmptyObject","cod","mess","children","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,aAAP,MAA0B,SAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMY,OAAO,GAAG,YAAY;AAC3BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,IAAI,GAAGZ,GAAG,CAACa,kBAAJ,EAAb;;AACA,UAAI,CAACZ,MAAM,CAACa,aAAP,CAAqBF,IAArB,CAAL,EAAiC;AAChCJ,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACAF,QAAAA,QAAQ;AACR,OAHD,MAGO;AACNF,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,QAAQ,CAAC;AAAEK,UAAAA,GAAG,EAAE,GAAP;AAAYC,UAAAA,IAAI,EAAG;AAAnB,SAAD,CAAR;AACA;;AACDV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAXD;;AAYAK,IAAAA,OAAO;AACP,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACC,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEN,MAAAA,OAAO,EAAEA,OAAX;AAAoBE,MAAAA,KAAK,EAAEA,KAA3B;AAAkCE,MAAAA,KAAK,EAAEA;AAAzC,KAA/B;AAAA,cACEL,KAAK,CAACa;AADR;AAAA;AAAA;AAAA;AAAA,UADD,CArBuC,CA0BvC;AACA;AACA;AACA,CA7BD,C,CA8BA;AACA;AACA;;;GAhCMd,gB;;KAAAA,gB;AAiCN,kCAAeN,KAAK,CAACqB,IAAN,CAAWf,gBAAX,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { api } from '../services/api';\r\nimport { helper } from '../helpers/common';\r\nimport CoronaContext from './index';\r\n\r\nconst CoronaProviderV2 = ({ props }) => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [virus, setVirus] = useState({});\r\n\tconst [error, setError] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst data = api.getDataVirusCorona();\r\n\t\t\tif (!helper.isEmptyObject(data)) {\r\n\t\t\t\tsetVirus(data);\r\n\t\t\t\tsetError();\r\n\t\t\t} else {\r\n\t\t\t\tsetVirus({});\r\n\t\t\t\tsetError({ cod: 404, mess: `Not found data` });\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t};\r\n\t\tgetData();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<CoronaContext.Provider value={{ loading: loading, virus: virus, error: error }}>\r\n\t\t\t{props.children}\r\n\t\t</CoronaContext.Provider>\r\n\t);\r\n\t// CoronaProviderV2.Proptypes = {\r\n\t// \tchildren: Proptypes.node.isRequired\r\n\t// };\r\n};\r\n// CoronaProviderV2.Proptypes = {\r\n// \tchildren: Proptypes.node.isRequired\r\n// };\r\nexport default React.memo(CoronaProviderV2);\r\n"]},"metadata":{},"sourceType":"module"}