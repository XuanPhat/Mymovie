{"ast":null,"code":"'use strict';\n/* eslint-disable camelcase */\n\nmodule.exports = launchSendMetrics;\n\nvar fs = require('graceful-fs');\n\nvar child_process = require('child_process');\n\nif (require.main === module) main();\n\nfunction launchSendMetrics() {\n  var path = require('path');\n\n  var npm = require('../npm.js');\n\n  try {\n    if (!npm.config.get('send-metrics')) return;\n    var cliMetrics = path.join(npm.config.get('cache'), 'anonymous-cli-metrics.json');\n    var targetRegistry = npm.config.get('metrics-registry');\n    fs.statSync(cliMetrics);\n    return runInBackground(__filename, [cliMetrics, targetRegistry]);\n  } catch (ex) {// if the metrics file doesn't exist, don't run\n  }\n}\n\nfunction runInBackground(js, args, opts) {\n  if (!args) args = [];\n  args.unshift(js);\n  if (!opts) opts = {};\n  opts.stdio = 'ignore';\n  opts.detached = true;\n  var child = child_process.spawn(process.execPath, args, opts);\n  child.unref();\n  return child;\n}\n\nfunction main() {\n  var sendMetrics = require('./metrics.js').send;\n\n  var metricsFile = process.argv[2];\n  var metricsRegistry = process.argv[3];\n  sendMetrics(metricsFile, metricsRegistry);\n}","map":{"version":3,"sources":["D:/node_modules/npm/lib/utils/metrics-launch.js"],"names":["module","exports","launchSendMetrics","fs","require","child_process","main","path","npm","config","get","cliMetrics","join","targetRegistry","statSync","runInBackground","__filename","ex","js","args","opts","unshift","stdio","detached","child","spawn","process","execPath","unref","sendMetrics","send","metricsFile","argv","metricsRegistry"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,iBAAjB;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,eAAD,CAA3B;;AAEA,IAAIA,OAAO,CAACE,IAAR,KAAiBN,MAArB,EAA6BM,IAAI;;AAEjC,SAASJ,iBAAT,GAA8B;AAC5B,MAAIK,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAII,GAAG,GAAGJ,OAAO,CAAC,WAAD,CAAjB;;AACA,MAAI;AACF,QAAI,CAACI,GAAG,CAACC,MAAJ,CAAWC,GAAX,CAAe,cAAf,CAAL,EAAqC;AACrC,QAAIC,UAAU,GAAGJ,IAAI,CAACK,IAAL,CAAUJ,GAAG,CAACC,MAAJ,CAAWC,GAAX,CAAe,OAAf,CAAV,EAAmC,4BAAnC,CAAjB;AACA,QAAIG,cAAc,GAAGL,GAAG,CAACC,MAAJ,CAAWC,GAAX,CAAe,kBAAf,CAArB;AACAP,IAAAA,EAAE,CAACW,QAAH,CAAYH,UAAZ;AACA,WAAOI,eAAe,CAACC,UAAD,EAAa,CAACL,UAAD,EAAaE,cAAb,CAAb,CAAtB;AACD,GAND,CAME,OAAOI,EAAP,EAAW,CACX;AACD;AACF;;AAED,SAASF,eAAT,CAA0BG,EAA1B,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AACxC,MAAI,CAACD,IAAL,EAAWA,IAAI,GAAG,EAAP;AACXA,EAAAA,IAAI,CAACE,OAAL,CAAaH,EAAb;AACA,MAAI,CAACE,IAAL,EAAWA,IAAI,GAAG,EAAP;AACXA,EAAAA,IAAI,CAACE,KAAL,GAAa,QAAb;AACAF,EAAAA,IAAI,CAACG,QAAL,GAAgB,IAAhB;AACA,MAAIC,KAAK,GAAGnB,aAAa,CAACoB,KAAd,CAAoBC,OAAO,CAACC,QAA5B,EAAsCR,IAAtC,EAA4CC,IAA5C,CAAZ;AACAI,EAAAA,KAAK,CAACI,KAAN;AACA,SAAOJ,KAAP;AACD;;AAED,SAASlB,IAAT,GAAiB;AACf,MAAIuB,WAAW,GAAGzB,OAAO,CAAC,cAAD,CAAP,CAAwB0B,IAA1C;;AACA,MAAIC,WAAW,GAAGL,OAAO,CAACM,IAAR,CAAa,CAAb,CAAlB;AACA,MAAIC,eAAe,GAAGP,OAAO,CAACM,IAAR,CAAa,CAAb,CAAtB;AAEAH,EAAAA,WAAW,CAACE,WAAD,EAAcE,eAAd,CAAX;AACD","sourcesContent":["'use strict'\r\n/* eslint-disable camelcase */\r\nmodule.exports = launchSendMetrics\r\nvar fs = require('graceful-fs')\r\nvar child_process = require('child_process')\r\n\r\nif (require.main === module) main()\r\n\r\nfunction launchSendMetrics () {\r\n  var path = require('path')\r\n  var npm = require('../npm.js')\r\n  try {\r\n    if (!npm.config.get('send-metrics')) return\r\n    var cliMetrics = path.join(npm.config.get('cache'), 'anonymous-cli-metrics.json')\r\n    var targetRegistry = npm.config.get('metrics-registry')\r\n    fs.statSync(cliMetrics)\r\n    return runInBackground(__filename, [cliMetrics, targetRegistry])\r\n  } catch (ex) {\r\n    // if the metrics file doesn't exist, don't run\r\n  }\r\n}\r\n\r\nfunction runInBackground (js, args, opts) {\r\n  if (!args) args = []\r\n  args.unshift(js)\r\n  if (!opts) opts = {}\r\n  opts.stdio = 'ignore'\r\n  opts.detached = true\r\n  var child = child_process.spawn(process.execPath, args, opts)\r\n  child.unref()\r\n  return child\r\n}\r\n\r\nfunction main () {\r\n  var sendMetrics = require('./metrics.js').send\r\n  var metricsFile = process.argv[2]\r\n  var metricsRegistry = process.argv[3]\r\n\r\n  sendMetrics(metricsFile, metricsRegistry)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}