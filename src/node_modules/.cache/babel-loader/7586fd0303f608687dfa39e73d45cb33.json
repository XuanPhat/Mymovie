{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\savedatainput\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const onScreenData = useRef({});\n  const [inputs, setInputs] = useState({});\n\n  const onInputChange = e => {\n    setInputs([...inputs, {\n      data: e.target.value\n    }]); // onScreenData.current = updatedInputs;\n  };\n\n  useEffect(() => () => {\n    saveScreenData(onScreenData.current);\n  }, []);\n  console.log(inputs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Use refs to get the latest inputs value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Note: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"note\",\n      onChange: onInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"BzzKsaf7s+c1yX5UO1EIzLhoXBY=\");\n\n_c = App;\n\nconst saveScreenData = data => {\n  console.log(data);\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/savedatainput/index.js"],"names":["React","useState","useEffect","useRef","App","onScreenData","inputs","setInputs","onInputChange","e","data","target","value","saveScreenData","current","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAMC,YAAY,GAAGF,MAAM,CAAC,EAAD,CAA3B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMO,aAAa,GAAGC,CAAC,IAAI;AAC1BF,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY;AAAEI,MAAAA,IAAI,EAAED,CAAC,CAACE,MAAF,CAASC;AAAjB,KAAZ,CAAD,CAAT,CAD0B,CAE1B;AACA,GAHD;;AAKAV,EAAAA,SAAS,CACR,MAAM,MAAM;AACXW,IAAAA,cAAc,CAACR,YAAY,CAACS,OAAd,CAAd;AACA,GAHO,EAIR,EAJQ,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,QAAQ,EAAEE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GAzBQJ,G;;KAAAA,G;;AA2BT,MAAMS,cAAc,GAAGH,IAAI,IAAI;AAC9BK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,CAFD;;AAGA,eAAeN,GAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction App() {\r\n\tconst onScreenData = useRef({});\r\n\tconst [inputs, setInputs] = useState({});\r\n\r\n\tconst onInputChange = e => {\r\n\t\tsetInputs([...inputs, { data: e.target.value }]);\r\n\t\t// onScreenData.current = updatedInputs;\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => () => {\r\n\t\t\tsaveScreenData(onScreenData.current);\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\tconsole.log(inputs);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Use refs to get the latest inputs value</h2>\r\n\t\t\t<label>Title: </label>\r\n\t\t\t<input name=\"title\" onChange={onInputChange} />\r\n\t\t\t<label>Note: </label>\r\n\t\t\t<input name=\"note\" onChange={onInputChange} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst saveScreenData = data => {\r\n\tconsole.log(data);\r\n};\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}