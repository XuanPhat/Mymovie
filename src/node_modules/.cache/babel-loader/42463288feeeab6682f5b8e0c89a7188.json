{"ast":null,"code":"'use strict';\n/**\r\n * response.js\r\n *\r\n * Response class provides content decoding\r\n */\n\nconst STATUS_CODES = require('http').STATUS_CODES;\n\nconst Headers = require('./headers.js');\n\nconst Body = require('./body.js');\n\nconst clone = Body.clone;\n/**\r\n * Response class\r\n *\r\n * @param   Stream  body  Readable stream\r\n * @param   Object  opts  Response options\r\n * @return  Void\r\n */\n\nclass Response {\n  constructor(body, opts) {\n    if (!opts) opts = {};\n    Body.call(this, body, opts);\n    this.url = opts.url;\n    this.status = opts.status || 200;\n    this.statusText = opts.statusText || STATUS_CODES[this.status];\n    this.headers = new Headers(opts.headers);\n    Object.defineProperty(this, Symbol.toStringTag, {\n      value: 'Response',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  /**\r\n   * Convenience property representing if the request ended normally\r\n   */\n\n\n  get ok() {\n    return this.status >= 200 && this.status < 300;\n  }\n  /**\r\n   * Clone this response\r\n   *\r\n   * @return  Response\r\n   */\n\n\n  clone() {\n    return new Response(clone(this), {\n      url: this.url,\n      status: this.status,\n      statusText: this.statusText,\n      headers: this.headers,\n      ok: this.ok\n    });\n  }\n\n}\n\nBody.mixIn(Response.prototype);\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n  value: 'ResponsePrototype',\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nmodule.exports = Response;","map":{"version":3,"sources":["D:/node_modules/npm/node_modules/node-fetch-npm/src/response.js"],"names":["STATUS_CODES","require","Headers","Body","clone","Response","constructor","body","opts","call","url","status","statusText","headers","Object","defineProperty","Symbol","toStringTag","value","writable","enumerable","configurable","ok","mixIn","prototype","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBD,YAArC;;AACA,MAAME,OAAO,GAAGD,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMG,KAAK,GAAGD,IAAI,CAACC,KAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAN,CAAe;AACbC,EAAAA,WAAW,CAAEC,IAAF,EAAQC,IAAR,EAAc;AACvB,QAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AACXL,IAAAA,IAAI,CAACM,IAAL,CAAU,IAAV,EAAgBF,IAAhB,EAAsBC,IAAtB;AAEA,SAAKE,GAAL,GAAWF,IAAI,CAACE,GAAhB;AACA,SAAKC,MAAL,GAAcH,IAAI,CAACG,MAAL,IAAe,GAA7B;AACA,SAAKC,UAAL,GAAkBJ,IAAI,CAACI,UAAL,IAAmBZ,YAAY,CAAC,KAAKW,MAAN,CAAjD;AAEA,SAAKE,OAAL,GAAe,IAAIX,OAAJ,CAAYM,IAAI,CAACK,OAAjB,CAAf;AAEAC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BC,MAAM,CAACC,WAAnC,EAAgD;AAC9CC,MAAAA,KAAK,EAAE,UADuC;AAE9CC,MAAAA,QAAQ,EAAE,KAFoC;AAG9CC,MAAAA,UAAU,EAAE,KAHkC;AAI9CC,MAAAA,YAAY,EAAE;AAJgC,KAAhD;AAMD;AAED;AACF;AACA;;;AACQ,MAAFC,EAAE,GAAI;AACR,WAAO,KAAKX,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,GAAc,GAA3C;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEP,EAAAA,KAAK,GAAI;AACP,WAAO,IAAIC,QAAJ,CAAaD,KAAK,CAAC,IAAD,CAAlB,EAA0B;AAC/BM,MAAAA,GAAG,EAAE,KAAKA,GADqB;AAE/BC,MAAAA,MAAM,EAAE,KAAKA,MAFkB;AAG/BC,MAAAA,UAAU,EAAE,KAAKA,UAHc;AAI/BC,MAAAA,OAAO,EAAE,KAAKA,OAJiB;AAK/BS,MAAAA,EAAE,EAAE,KAAKA;AALsB,KAA1B,CAAP;AAOD;;AAvCY;;AA0CfnB,IAAI,CAACoB,KAAL,CAAWlB,QAAQ,CAACmB,SAApB;AAEAV,MAAM,CAACC,cAAP,CAAsBV,QAAQ,CAACmB,SAA/B,EAA0CR,MAAM,CAACC,WAAjD,EAA8D;AAC5DC,EAAAA,KAAK,EAAE,mBADqD;AAE5DC,EAAAA,QAAQ,EAAE,KAFkD;AAG5DC,EAAAA,UAAU,EAAE,KAHgD;AAI5DC,EAAAA,YAAY,EAAE;AAJ8C,CAA9D;AAMAI,MAAM,CAACC,OAAP,GAAiBrB,QAAjB","sourcesContent":["'use strict'\r\n\r\n/**\r\n * response.js\r\n *\r\n * Response class provides content decoding\r\n */\r\n\r\nconst STATUS_CODES = require('http').STATUS_CODES\r\nconst Headers = require('./headers.js')\r\nconst Body = require('./body.js')\r\nconst clone = Body.clone\r\n\r\n/**\r\n * Response class\r\n *\r\n * @param   Stream  body  Readable stream\r\n * @param   Object  opts  Response options\r\n * @return  Void\r\n */\r\nclass Response {\r\n  constructor (body, opts) {\r\n    if (!opts) opts = {}\r\n    Body.call(this, body, opts)\r\n\r\n    this.url = opts.url\r\n    this.status = opts.status || 200\r\n    this.statusText = opts.statusText || STATUS_CODES[this.status]\r\n\r\n    this.headers = new Headers(opts.headers)\r\n\r\n    Object.defineProperty(this, Symbol.toStringTag, {\r\n      value: 'Response',\r\n      writable: false,\r\n      enumerable: false,\r\n      configurable: true\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Convenience property representing if the request ended normally\r\n   */\r\n  get ok () {\r\n    return this.status >= 200 && this.status < 300\r\n  }\r\n\r\n  /**\r\n   * Clone this response\r\n   *\r\n   * @return  Response\r\n   */\r\n  clone () {\r\n    return new Response(clone(this), {\r\n      url: this.url,\r\n      status: this.status,\r\n      statusText: this.statusText,\r\n      headers: this.headers,\r\n      ok: this.ok\r\n    })\r\n  }\r\n}\r\n\r\nBody.mixIn(Response.prototype)\r\n\r\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\r\n  value: 'ResponsePrototype',\r\n  writable: false,\r\n  enumerable: false,\r\n  configurable: true\r\n})\r\nmodule.exports = Response\r\n"]},"metadata":{},"sourceType":"script"}