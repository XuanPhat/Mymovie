{"ast":null,"code":"import * as actions from \"../actions/types\";\nconst initState = {\n  shoppingCart: []\n};\nexport const reducerCart = (state = initState, action) => {\n  switch (action.type) {\n    case actions.INCREMENT_CART:\n      let infoProduct = action.data;\n      var found = [...state.shoppingCart].find(item => item.shoppingCart.id === action.data.id);\n\n      if (found) {\n        found.shoppingCart.quantity++;\n        return { ...state,\n          shoppingCart: [...state.shoppingCart]\n        };\n      } else {\n        // // shopping cart not product then add product to shopping cart\n        infoProduct.quantity = 1;\n        var shoppingCart = [...state.shoppingCart, {\n          shoppingCart: infoProduct\n        }];\n        return { ...state,\n          shoppingCart: shoppingCart\n        };\n      }\n\n    case actions.CHANGE_QUANTITY_CART:\n      let foundId = [...state.shoppingCart].find(e => e.shoppingCart.id === action.productId);\n\n      if (foundId) {\n        foundId.shoppingCart.quantity = action.quantity;\n      }\n\n      return { ...state,\n        shoppingCart: [...state.shoppingCart]\n      };\n\n    case actions.REMOVE_CART:\n      // eslint-disable-next-line no-redeclare\n      var shoppingCart = [...state.shoppingCart].filter(e => e.shoppingCart.id !== action.productId);\n      return { ...state,\n        shoppingCart: shoppingCart\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/shopping/reducers/reducerCart.js"],"names":["actions","initState","shoppingCart","reducerCart","state","action","type","INCREMENT_CART","infoProduct","data","found","find","item","id","quantity","CHANGE_QUANTITY_CART","foundId","e","productId","REMOVE_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,YAAY,EAAE;AADE,CAAlB;AAGA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,SAAT,EAAoBI,MAApB,KAA+B;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAO,CAACO,cAAb;AACE,UAAIC,WAAW,GAAGH,MAAM,CAACI,IAAzB;AACA,UAAIC,KAAK,GAAG,CAAC,GAAGN,KAAK,CAACF,YAAV,EAAwBS,IAAxB,CACTC,IAAD,IAAUA,IAAI,CAACV,YAAL,CAAkBW,EAAlB,KAAyBR,MAAM,CAACI,IAAP,CAAYI,EADrC,CAAZ;;AAGA,UAAIH,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACR,YAAN,CAAmBY,QAAnB;AACA,eAAO,EACL,GAAGV,KADE;AAELF,UAAAA,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAV;AAFT,SAAP;AAID,OAND,MAMO;AACL;AACAM,QAAAA,WAAW,CAACM,QAAZ,GAAuB,CAAvB;AACA,YAAIZ,YAAY,GAAG,CACjB,GAAGE,KAAK,CAACF,YADQ,EAEjB;AACEA,UAAAA,YAAY,EAAEM;AADhB,SAFiB,CAAnB;AAMA,eAAO,EACL,GAAGJ,KADE;AAELF,UAAAA,YAAY,EAAEA;AAFT,SAAP;AAID;;AAEH,SAAKF,OAAO,CAACe,oBAAb;AACE,UAAIC,OAAO,GAAG,CAAC,GAAGZ,KAAK,CAACF,YAAV,EAAwBS,IAAxB,CACXM,CAAD,IAAOA,CAAC,CAACf,YAAF,CAAeW,EAAf,KAAsBR,MAAM,CAACa,SADxB,CAAd;;AAGA,UAAIF,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACd,YAAR,CAAqBY,QAArB,GAAgCT,MAAM,CAACS,QAAvC;AACD;;AAED,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAV;AAFT,OAAP;;AAIF,SAAKF,OAAO,CAACmB,WAAb;AACE;AACA,UAAIjB,YAAY,GAAG,CAAC,GAAGE,KAAK,CAACF,YAAV,EAAwBkB,MAAxB,CAChBH,CAAD,IAAOA,CAAC,CAACf,YAAF,CAAeW,EAAf,KAAsBR,MAAM,CAACa,SADnB,CAAnB;AAIA,aAAO,EACL,GAAGd,KADE;AAELF,QAAAA,YAAY,EAAEA;AAFT,OAAP;;AAIF;AACE,aAAOE,KAAP;AAlDJ;AAoDD,CArDM","sourcesContent":["import * as actions from \"../actions/types\";\nconst initState = {\n  shoppingCart: [],\n};\nexport const reducerCart = (state = initState, action) => {\n  switch (action.type) {\n    case actions.INCREMENT_CART:\n      let infoProduct = action.data;\n      var found = [...state.shoppingCart].find(\n        (item) => item.shoppingCart.id === action.data.id\n      );\n      if (found) {\n        found.shoppingCart.quantity++;\n        return {\n          ...state,\n          shoppingCart: [...state.shoppingCart],\n        };\n      } else {\n        // // shopping cart not product then add product to shopping cart\n        infoProduct.quantity = 1;\n        var shoppingCart = [\n          ...state.shoppingCart,\n          {\n            shoppingCart: infoProduct,\n          },\n        ];\n        return {\n          ...state,\n          shoppingCart: shoppingCart,\n        };\n      }\n\n    case actions.CHANGE_QUANTITY_CART:\n      let foundId = [...state.shoppingCart].find(\n        (e) => e.shoppingCart.id === action.productId\n      );\n      if (foundId) {\n        foundId.shoppingCart.quantity = action.quantity;\n      }\n\n      return {\n        ...state,\n        shoppingCart: [...state.shoppingCart],\n      };\n    case actions.REMOVE_CART:\n      // eslint-disable-next-line no-redeclare\n      var shoppingCart = [...state.shoppingCart].filter(\n        (e) => e.shoppingCart.id !== action.productId\n      );\n\n      return {\n        ...state,\n        shoppingCart: shoppingCart,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}