{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\hooks\\\\movies\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ListMovies from './components/ListMovies';\nimport { api } from './services/api';\nimport { helper } from './helpers/common';\nimport { Skeleton } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const [movies, setListMovies] = React.useState({});\n  const [page, setPage] = React.useState(1); // trong class component,minh call api trong componentdidmount\n  // trong function thi dung useeffect\n\n  useEffect(() => {\n    const getDataApi = async () => {\n      // setstate\n      setLoading(true);\n      const data = await api.getDataMovies(page);\n\n      if (!helper.isEmptyObject(data)) {\n        if (data.hasOwnProperty('results')) {\n          setListMovies(data.results);\n        }\n      }\n\n      setLoading(false);\n    };\n\n    getDataApi();\n  }, []); //  mang rong\n\n  console.log(loading);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(ListMovies, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 44\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"pXaUvz+QUhy/MUlyOkFnz1w4j2c=\");\n\n_c = App;\nexport default _c2 = /*#__PURE__*/React.memo(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/hooks/movies/App.js"],"names":["React","useEffect","ListMovies","api","helper","Skeleton","App","loading","setLoading","useState","movies","setListMovies","page","setPage","getDataApi","data","getDataMovies","isEmptyObject","hasOwnProperty","results","console","log","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,MAAzB;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,MAAD,EAASC,aAAT,IAA0BX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACS,QAAN,CAAe,CAAf,CAAxB,CAHiB,CAIjB;AACA;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,UAAU,GAAG,YAAY;AAC9B;AACAN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMO,IAAI,GAAG,MAAMZ,GAAG,CAACa,aAAJ,CAAkBJ,IAAlB,CAAnB;;AACA,UAAI,CAACR,MAAM,CAACa,aAAP,CAAqBF,IAArB,CAAL,EAAiC;AAChC,YAAIA,IAAI,CAACG,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AACnCP,UAAAA,aAAa,CAACI,IAAI,CAACI,OAAN,CAAb;AACA;AACD;;AACDX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAVD;;AAWAM,IAAAA,UAAU;AACV,GAbQ,EAaN,EAbM,CAAT,CANiB,CAmBT;;AACRM,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,sBAAO;AAAA,cAAGH,OAAO,gBAAG,QAAC,QAAD;AAAU,MAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAnC,mBAAP;AACA,CAvBD;;GAAMD,G;;KAAAA,G;AAyBN,kCAAeN,KAAK,CAACsB,IAAN,CAAWhB,GAAX,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ListMovies from './components/ListMovies';\r\nimport { api } from './services/api';\r\nimport { helper } from './helpers/common';\r\nimport { Skeleton } from 'antd';\r\nconst App = () => {\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\tconst [movies, setListMovies] = React.useState({});\r\n\tconst [page, setPage] = React.useState(1);\r\n\t// trong class component,minh call api trong componentdidmount\r\n\t// trong function thi dung useeffect\r\n\tuseEffect(() => {\r\n\t\tconst getDataApi = async () => {\r\n\t\t\t// setstate\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst data = await api.getDataMovies(page);\r\n\t\t\tif (!helper.isEmptyObject(data)) {\r\n\t\t\t\tif (data.hasOwnProperty('results')) {\r\n\t\t\t\t\tsetListMovies(data.results);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t};\r\n\t\tgetDataApi();\r\n\t}, []); //  mang rong\r\n\tconsole.log(loading);\r\n\tconsole.log(movies);\r\n\treturn <>{loading ? <Skeleton active /> : <ListMovies />}</>;\r\n};\r\n\r\nexport default React.memo(App);\r\n"]},"metadata":{},"sourceType":"module"}