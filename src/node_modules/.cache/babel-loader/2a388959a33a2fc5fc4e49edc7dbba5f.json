{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\redux\\\\counter\\\\components\\\\Increment.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { incrementCounter } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Increment = () => {\n  _s();\n\n  const count = useSelector(state => state.counter.count);\n  const dispatch = useDispatch();\n\n  const dispatchIncrement = () => {\n    dispatch(incrementCounter(count));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"text\",\n    onClick: dispatchIncrement,\n    children: \"+\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Increment, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Increment;\nexport default _c2 = /*#__PURE__*/React.memo(Increment);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Increment\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/redux/counter/components/Increment.js"],"names":["React","useDispatch","useSelector","incrementCounter","Increment","count","state","counter","dispatch","dispatchIncrement","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAMC,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,KAAxB,CAAzB;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC/BD,IAAAA,QAAQ,CAACL,gBAAgB,CAACE,KAAD,CAAjB,CAAR;AACA,GAFD;;AAGA,sBACC;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEI,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAXD;;GAAML,S;UACSF,W,EACGD,W;;;KAFZG,S;AAaN,kCAAeJ,KAAK,CAACU,IAAN,CAAWN,SAAX,CAAf","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { incrementCounter } from '../actions/index';\r\nconst Increment = () => {\r\n\tconst count = useSelector(state => state.counter.count);\r\n\tconst dispatch = useDispatch();\r\n\tconst dispatchIncrement = () => {\r\n\t\tdispatch(incrementCounter(count));\r\n\t};\r\n\treturn (\r\n\t\t<button type=\"text\" onClick={dispatchIncrement}>\r\n\t\t\t+\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Increment);\r\n"]},"metadata":{},"sourceType":"module"}