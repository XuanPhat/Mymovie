{"ast":null,"code":"function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = {\n      forever: options\n    };\n  }\n\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\n\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.stop = function () {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  this._timeouts = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function (err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(this._errors.length - 1, this._errors.length);\n\n      this._timeouts = this._cachedTimeouts.slice(0);\n      timeout = this._timeouts.shift();\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  var timer = setTimeout(function () {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function () {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (this._options.unref) {\n        self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n    timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function (fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function () {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function (fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function (fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function () {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function () {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function () {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};","map":{"version":3,"sources":["D:/node_modules/npm/node_modules/promise-retry/node_modules/retry/lib/retry_operation.js"],"names":["RetryOperation","timeouts","options","forever","_timeouts","_options","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_cachedTimeouts","slice","module","exports","prototype","stop","clearTimeout","retry","err","push","timeout","shift","undefined","splice","length","self","timer","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","error","message","count"],"mappings":"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","sourcesContent":["function RetryOperation(timeouts, options) {\r\n  // Compatibility for the old (timeouts, retryForever) signature\r\n  if (typeof options === 'boolean') {\r\n    options = { forever: options };\r\n  }\r\n\r\n  this._timeouts = timeouts;\r\n  this._options = options || {};\r\n  this._fn = null;\r\n  this._errors = [];\r\n  this._attempts = 1;\r\n  this._operationTimeout = null;\r\n  this._operationTimeoutCb = null;\r\n  this._timeout = null;\r\n\r\n  if (this._options.forever) {\r\n    this._cachedTimeouts = this._timeouts.slice(0);\r\n  }\r\n}\r\nmodule.exports = RetryOperation;\r\n\r\nRetryOperation.prototype.stop = function() {\r\n  if (this._timeout) {\r\n    clearTimeout(this._timeout);\r\n  }\r\n\r\n  this._timeouts       = [];\r\n  this._cachedTimeouts = null;\r\n};\r\n\r\nRetryOperation.prototype.retry = function(err) {\r\n  if (this._timeout) {\r\n    clearTimeout(this._timeout);\r\n  }\r\n\r\n  if (!err) {\r\n    return false;\r\n  }\r\n\r\n  this._errors.push(err);\r\n\r\n  var timeout = this._timeouts.shift();\r\n  if (timeout === undefined) {\r\n    if (this._cachedTimeouts) {\r\n      // retry forever, only keep last error\r\n      this._errors.splice(this._errors.length - 1, this._errors.length);\r\n      this._timeouts = this._cachedTimeouts.slice(0);\r\n      timeout = this._timeouts.shift();\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var self = this;\r\n  var timer = setTimeout(function() {\r\n    self._attempts++;\r\n\r\n    if (self._operationTimeoutCb) {\r\n      self._timeout = setTimeout(function() {\r\n        self._operationTimeoutCb(self._attempts);\r\n      }, self._operationTimeout);\r\n\r\n      if (this._options.unref) {\r\n          self._timeout.unref();\r\n      }\r\n    }\r\n\r\n    self._fn(self._attempts);\r\n  }, timeout);\r\n\r\n  if (this._options.unref) {\r\n      timer.unref();\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\r\n  this._fn = fn;\r\n\r\n  if (timeoutOps) {\r\n    if (timeoutOps.timeout) {\r\n      this._operationTimeout = timeoutOps.timeout;\r\n    }\r\n    if (timeoutOps.cb) {\r\n      this._operationTimeoutCb = timeoutOps.cb;\r\n    }\r\n  }\r\n\r\n  var self = this;\r\n  if (this._operationTimeoutCb) {\r\n    this._timeout = setTimeout(function() {\r\n      self._operationTimeoutCb();\r\n    }, self._operationTimeout);\r\n  }\r\n\r\n  this._fn(this._attempts);\r\n};\r\n\r\nRetryOperation.prototype.try = function(fn) {\r\n  console.log('Using RetryOperation.try() is deprecated');\r\n  this.attempt(fn);\r\n};\r\n\r\nRetryOperation.prototype.start = function(fn) {\r\n  console.log('Using RetryOperation.start() is deprecated');\r\n  this.attempt(fn);\r\n};\r\n\r\nRetryOperation.prototype.start = RetryOperation.prototype.try;\r\n\r\nRetryOperation.prototype.errors = function() {\r\n  return this._errors;\r\n};\r\n\r\nRetryOperation.prototype.attempts = function() {\r\n  return this._attempts;\r\n};\r\n\r\nRetryOperation.prototype.mainError = function() {\r\n  if (this._errors.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  var counts = {};\r\n  var mainError = null;\r\n  var mainErrorCount = 0;\r\n\r\n  for (var i = 0; i < this._errors.length; i++) {\r\n    var error = this._errors[i];\r\n    var message = error.message;\r\n    var count = (counts[message] || 0) + 1;\r\n\r\n    counts[message] = count;\r\n\r\n    if (count >= mainErrorCount) {\r\n      mainError = error;\r\n      mainErrorCount = count;\r\n    }\r\n  }\r\n\r\n  return mainError;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}