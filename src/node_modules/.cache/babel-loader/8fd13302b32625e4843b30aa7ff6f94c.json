{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\todolistnangcao\\\\todolist\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { FaPlusSquare } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  setInputhandler,\n  Inputhandler,\n  Submitdata,\n  setSubmitdata,\n  setDropdowntodo,\n  Dropdowntodo,\n  setStatus,\n  Status\n}) => {\n  _s();\n\n  useEffect(() => {\n    console.log('Hello');\n  }, [Submitdata]);\n\n  const HandlerInput = e => {\n    setInputhandler(e.target.value);\n  };\n\n  const Confirmedata = e => {\n    e.preventDefault();\n\n    if (Inputhandler !== '') {\n      setSubmitdata([...Submitdata, {\n        data: Inputhandler,\n        completed: false,\n        id: Math.random() * 1000\n      }]);\n    }\n\n    setInputhandler('');\n  };\n\n  const Dropdownmenu = e => {\n    setDropdowntodo(e.target.value);\n  };\n\n  const SetStatus = () => {\n    switch (Dropdowntodo) {\n      case 'completed':\n        setStatus(Submitdata.filter(e => e.completed === true));\n        break;\n\n      case 'uncompleted':\n        setStatus(Submitdata.filter(e => e.completed === false));\n        break;\n\n      default:\n        setStatus(Submitdata);\n        break;\n    }\n  };\n\n  SetStatus();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Formparent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: Inputhandler,\n          onChange: e => HandlerInput(e),\n          type: \"text\",\n          className: \"input_todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaPlusSquare, {\n          className: \"plus\",\n          onClick: Confirmedata\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"cars\",\n        id: \"Dropdown_todo\",\n        onChange: Dropdownmenu,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"uncompleted\",\n          children: \"uncompleted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/todolistnangcao/todolist/form.js"],"names":["React","useEffect","FaPlusSquare","Form","setInputhandler","Inputhandler","Submitdata","setSubmitdata","setDropdowntodo","Dropdowntodo","setStatus","Status","console","log","HandlerInput","e","target","value","Confirmedata","preventDefault","data","completed","id","Math","random","Dropdownmenu","SetStatus","filter"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { FaPlusSquare } from 'react-icons/fa';\r\nconst Form = ({\r\n\tsetInputhandler,\r\n\tInputhandler,\r\n\tSubmitdata,\r\n\tsetSubmitdata,\r\n\tsetDropdowntodo,\r\n\tDropdowntodo,\r\n\tsetStatus,\r\n\tStatus\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tconsole.log('Hello');\r\n\t}, [Submitdata]);\r\n\tconst HandlerInput = e => {\r\n\t\tsetInputhandler(e.target.value);\r\n\t};\r\n\tconst Confirmedata = e => {\r\n\t\te.preventDefault();\r\n\t\tif (Inputhandler !== '') {\r\n\t\t\tsetSubmitdata([...Submitdata, { data: Inputhandler, completed: false, id: Math.random() * 1000 }]);\r\n\t\t}\r\n\r\n\t\tsetInputhandler('');\r\n\t};\r\n\r\n\tconst Dropdownmenu = e => {\r\n\t\tsetDropdowntodo(e.target.value);\r\n\t};\r\n\tconst SetStatus = () => {\r\n\t\tswitch (Dropdowntodo) {\r\n\t\t\tcase 'completed':\r\n\t\t\t\tsetStatus(Submitdata.filter(e => e.completed === true));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uncompleted':\r\n\t\t\t\tsetStatus(Submitdata.filter(e => e.completed === false));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tsetStatus(Submitdata);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tSetStatus();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"Formparent\">\r\n\t\t\t\t<div className=\"input_parent\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={Inputhandler}\r\n\t\t\t\t\t\tonChange={e => HandlerInput(e)}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"input_todo\"\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t{/* <div className=\"todo_plus\"></div> */}\r\n\r\n\t\t\t\t\t<FaPlusSquare className=\"plus\" onClick={Confirmedata} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<select name=\"cars\" id=\"Dropdown_todo\" onChange={Dropdownmenu}>\r\n\t\t\t\t\t<option value=\"All\">All</option>\r\n\t\t\t\t\t<option value=\"completed\">completed</option>\r\n\t\t\t\t\t<option value=\"uncompleted\">uncompleted</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}