{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from \"./rootSagas\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { history } from \"../helpers/history\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport { routerMiddleware } from \"connected-react-router\"; // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware(); // mount it on the Store\n\nconst ConfigRootPersist = {\n  key: \"shopping_cart\",\n  storage: storage,\n  blacklist: [\"router\", \"reducerLogin\"]\n};\nconst rootReducerPersisted = persistReducer(ConfigRootPersist, rootReducer(history));\n\nconst configStore = (defaultState = {}) => {\n  const store = createStore(rootReducerPersisted, defaultState, applyMiddleware(sagaMiddleware, logger, routerMiddleware(history))); // then run the saga\n\n  sagaMiddleware.run(rootSaga);\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n    history\n  };\n};\n\nexport default configStore;","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/shopping/store/index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","logger","rootReducer","rootSaga","persistStore","persistReducer","history","storage","routerMiddleware","sagaMiddleware","ConfigRootPersist","key","blacklist","rootReducerPersisted","configStore","defaultState","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,SAASC,gBAAT,QAAiC,wBAAjC,C,CAEA;;AACA,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C,C,CACA;;AACA,MAAMU,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,eADmB;AAExBJ,EAAAA,OAAO,EAAEA,OAFe;AAGxBK,EAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,cAAX;AAHa,CAA1B;AAKA,MAAMC,oBAAoB,GAAGR,cAAc,CACzCK,iBADyC,EAEzCR,WAAW,CAACI,OAAD,CAF8B,CAA3C;;AAKA,MAAMQ,WAAW,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AACzC,QAAMC,KAAK,GAAGlB,WAAW,CACvBe,oBADuB,EAEvBE,YAFuB,EAGvBhB,eAAe,CAACU,cAAD,EAAiBR,MAAjB,EAAyBO,gBAAgB,CAACF,OAAD,CAAzC,CAHQ,CAAzB,CADyC,CAMzC;;AACAG,EAAAA,cAAc,CAACQ,GAAf,CAAmBd,QAAnB;AACA,MAAIe,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASE,IAAAA,SAAT;AAAoBZ,IAAAA;AAApB,GAAP;AACD,CAVD;;AAWA,eAAeQ,WAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport rootSaga from \"./rootSagas\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { history } from \"../helpers/history\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport { routerMiddleware } from \"connected-react-router\";\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n// mount it on the Store\r\nconst ConfigRootPersist = {\r\n  key: \"shopping_cart\",\r\n  storage: storage,\r\n  blacklist: [\"router\", \"reducerLogin\"],\r\n};\r\nconst rootReducerPersisted = persistReducer(\r\n  ConfigRootPersist,\r\n  rootReducer(history)\r\n);\r\n\r\nconst configStore = (defaultState = {}) => {\r\n  const store = createStore(\r\n    rootReducerPersisted,\r\n    defaultState,\r\n    applyMiddleware(sagaMiddleware, logger, routerMiddleware(history))\r\n  );\r\n  // then run the saga\r\n  sagaMiddleware.run(rootSaga);\r\n  let persistor = persistStore(store);\r\n  return { store, persistor, history };\r\n};\r\nexport default configStore;\r\n"]},"metadata":{},"sourceType":"module"}