{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\themeswitch\\\\context\\\\ThemeProvider.js\";\nimport React, { Component } from 'react';\nimport ThemeContext from './ThemeContext';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themelight = ['--background-color: white'];\nconst themedark = ['--background-color: black'];\n\nclass ThemeProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.applytheme = theme => {\n      const root = document.getElementsByClassName('Box')[0];\n      root.style = {\n        width: '100px'\n      };\n      console.log(root.style);\n    };\n\n    this.toggle = () => {\n      this.setState(state => ({ ...this.state,\n        dark: !this.state.dark\n      }));\n      console.log(this.state.dark);\n      window.localStorage.setItem('Darktheme', !this.state.dark);\n    };\n\n    this.state = {\n      dark: false\n    };\n  }\n\n  componentDidMount() {\n    const lasttheme = window.localStorage.getItem('Darktheme');\n\n    if (lasttheme === false) {\n      this.setState({ ...this.state,\n        dark: false\n      });\n    } else {\n      this.setState({ ...this.state,\n        dark: true\n      });\n    }\n\n    console.log(lasttheme);\n  }\n\n  componentDidUpdate() {\n    const theme = window.localStorage.getItem('Darktheme');\n\n    if (theme === false) {\n      this.applytheme(themelight);\n    } else {\n      this.applytheme(themedark);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: {\n        dark: this.state.dark,\n        toggle: this.toggle\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ThemeProvider;","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/themeswitch/context/ThemeProvider.js"],"names":["React","Component","ThemeContext","PropTypes","themelight","themedark","ThemeProvider","constructor","props","applytheme","theme","root","document","getElementsByClassName","style","width","console","log","toggle","setState","state","dark","window","localStorage","setItem","componentDidMount","lasttheme","getItem","componentDidUpdate","render","children","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,MAAMC,UAAU,GAAG,CAAC,2BAAD,CAAnB;AACA,MAAMC,SAAS,GAAG,CAAC,2BAAD,CAAlB;;AACA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACrCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAQnBC,UARmB,GAQNC,KAAK,IAAI;AACrB,YAAMC,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,KAAhC,EAAuC,CAAvC,CAAb;AAEAF,MAAAA,IAAI,CAACG,KAAL,GAAa;AACZC,QAAAA,KAAK,EAAE;AADK,OAAb;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACG,KAAjB;AACA,KAfkB;;AAAA,SAiBnBI,MAjBmB,GAiBV,MAAM;AACd,WAAKC,QAAL,CAAcC,KAAK,KAAK,EAAE,GAAG,KAAKA,KAAV;AAAiBC,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAnC,OAAL,CAAnB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWC,IAAvB;AACAC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyC,CAAC,KAAKJ,KAAL,CAAWC,IAArD;AACA,KArBkB;;AAGlB,SAAKD,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE;AADM,KAAb;AAGA;;AAgBDI,EAAAA,iBAAiB,GAAG;AACnB,UAAMC,SAAS,GAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,WAA5B,CAAlB;;AAEA,QAAID,SAAS,KAAK,KAAlB,EAAyB;AACxB,WAAKP,QAAL,CAAc,EAAE,GAAG,KAAKC,KAAV;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAd;AACA,KAFD,MAEO;AACN,WAAKF,QAAL,CAAc,EAAE,GAAG,KAAKC,KAAV;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAd;AACA;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYS,SAAZ;AACA;;AAEDE,EAAAA,kBAAkB,GAAG;AACpB,UAAMlB,KAAK,GAAGY,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,WAA5B,CAAd;;AAEA,QAAIjB,KAAK,KAAK,KAAd,EAAqB;AACpB,WAAKD,UAAL,CAAgBL,UAAhB;AACA,KAFD,MAEO;AACN,WAAKK,UAAL,CAAgBJ,SAAhB;AACA;AACD;;AAEDwB,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAAER,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAnB;AAAyBH,QAAAA,MAAM,EAAE,KAAKA;AAAtC,OAA9B;AAAA,gBACE,KAAKV,KAAL,CAAWsB;AADb;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAlDoC;;AAoDtCxB,aAAa,CAACyB,SAAd,GAA0B;AACzBD,EAAAA,QAAQ,EAAE3B,SAAS,CAAC6B,IAAV,CAAeC;AADA,CAA1B;AAIA,eAAe3B,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ThemeContext from './ThemeContext';\r\nimport PropTypes from 'prop-types';\r\nconst themelight = ['--background-color: white'];\r\nconst themedark = ['--background-color: black'];\r\nclass ThemeProvider extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdark: false\r\n\t\t};\r\n\t}\r\n\r\n\tapplytheme = theme => {\r\n\t\tconst root = document.getElementsByClassName('Box')[0];\r\n\r\n\t\troot.style = {\r\n\t\t\twidth: '100px'\r\n\t\t};\r\n\t\tconsole.log(root.style);\r\n\t};\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState(state => ({ ...this.state, dark: !this.state.dark }));\r\n\t\tconsole.log(this.state.dark);\r\n\t\twindow.localStorage.setItem('Darktheme', !this.state.dark);\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tconst lasttheme = window.localStorage.getItem('Darktheme');\r\n\r\n\t\tif (lasttheme === false) {\r\n\t\t\tthis.setState({ ...this.state, dark: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ ...this.state, dark: true });\r\n\t\t}\r\n\t\tconsole.log(lasttheme);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst theme = window.localStorage.getItem('Darktheme');\r\n\r\n\t\tif (theme === false) {\r\n\t\t\tthis.applytheme(themelight);\r\n\t\t} else {\r\n\t\t\tthis.applytheme(themedark);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ThemeContext.Provider value={{ dark: this.state.dark, toggle: this.toggle }}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</ThemeContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\nThemeProvider.propTypes = {\r\n\tchildren: PropTypes.node.isRequired\r\n};\r\n\r\nexport default ThemeProvider;\r\n"]},"metadata":{},"sourceType":"module"}