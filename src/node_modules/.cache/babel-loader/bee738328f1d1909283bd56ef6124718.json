{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\movies\\\\pages\\\\searchMovies\\\\index.js\",\n    _s = $RefreshSig$();\n\n// eslint-disable-next-line\nimport React from \"react\";\nimport InputSearchMovies from \"./components/search\";\nimport LayoutMovies from \"../../components/layout\";\nimport BreadcrumbMovies from \"../../components/BreadcrumbMovies\";\nimport { api } from \"../../services/api\";\nimport { helper } from \"../../helpers/common\";\nimport { Row, Col, Pagination } from \"antd\";\nimport CardMovies from \"../../components/CardMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchMovies = () => {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const [dataSearch, setDataSearch] = React.useState({});\n  const [page, setPage] = React.useState(1);\n  const [results, setResults] = React.useState(1);\n  const [totalPage, setTotalPage] = React.useState(1);\n  const [keywordSearch, setKeywordSearch] = React.useState(\"\");\n\n  const searchFilm = async keywordSearch => {\n    if (keywordSearch) {\n      setLoading(true);\n      setKeywordSearch(keywordSearch);\n      const data = await api.searchMovieByKeyword(keywordSearch, page);\n\n      if (!helper.isEmptyObject(data)) {\n        if (data.hasOwnProperty(\"results\")) {\n          setDataSearch(data.results);\n          setResults(data.total_results);\n          setTotalPage(data.total_pages);\n        }\n      }\n\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    const searchFilm = async keywordSearch => {\n      if (keywordSearch) {\n        setLoading(true);\n        setKeywordSearch(keywordSearch);\n        const data = await api.searchMovieByKeyword(keywordSearch, page);\n\n        if (!helper.isEmptyObject(data)) {\n          if (data.hasOwnProperty(\"results\")) {\n            setDataSearch(data.results);\n            setResults(data.total_results);\n            setTotalPage(data.total_pages);\n          }\n        }\n\n        setLoading(false);\n      }\n    };\n\n    searchFilm(keywordSearch);\n  }, [keywordSearch, page]);\n\n  const getDataByPage = p => {\n    if (p >= 1 && p <= totalPage) {\n      setPage(p);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayoutMovies, {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbMovies, {\n      item_lv1: \"App\",\n      item_lv2: \"Movies\",\n      item_lv3: \"Search-film\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-layout-content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"This is search movies page !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputSearchMovies, {\n            search: searchFilm,\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), !helper.isEmptyObject(dataSearch) && /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginTop: \"30px\"\n            },\n            children: dataSearch.map(item => /*#__PURE__*/_jsxDEV(Col, {\n              span: 6,\n              children: /*#__PURE__*/_jsxDEV(CardMovies, {\n                item: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), results > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n            style: {\n              textAlign: \"center\"\n            },\n            current: page,\n            defaultCurrent: 1,\n            pageSize: 20,\n            total: results,\n            onChange: p => getDataByPage(p)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchMovies, \"mIylqRSMwrlhAZ320wHX6uv36to=\");\n\n_c = SearchMovies;\nexport default _c2 = /*#__PURE__*/React.memo(SearchMovies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchMovies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/movies/pages/searchMovies/index.js"],"names":["React","InputSearchMovies","LayoutMovies","BreadcrumbMovies","api","helper","Row","Col","Pagination","CardMovies","SearchMovies","loading","setLoading","useState","dataSearch","setDataSearch","page","setPage","results","setResults","totalPage","setTotalPage","keywordSearch","setKeywordSearch","searchFilm","data","searchMovieByKeyword","isEmptyObject","hasOwnProperty","total_results","total_pages","useEffect","getDataByPage","p","textAlign","marginTop","map","item","id","memo"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport React from \"react\";\nimport InputSearchMovies from \"./components/search\";\nimport LayoutMovies from \"../../components/layout\";\nimport BreadcrumbMovies from \"../../components/BreadcrumbMovies\";\nimport { api } from \"../../services/api\";\nimport { helper } from \"../../helpers/common\";\nimport { Row, Col, Pagination } from \"antd\";\nimport CardMovies from \"../../components/CardMovies\";\nconst SearchMovies = () => {\n  const [loading, setLoading] = React.useState(false);\n  const [dataSearch, setDataSearch] = React.useState({});\n  const [page, setPage] = React.useState(1);\n  const [results, setResults] = React.useState(1);\n  const [totalPage, setTotalPage] = React.useState(1);\n  const [keywordSearch, setKeywordSearch] = React.useState(\"\");\n  const searchFilm = async (keywordSearch) => {\n    if (keywordSearch) {\n      setLoading(true);\n      setKeywordSearch(keywordSearch);\n      const data = await api.searchMovieByKeyword(keywordSearch, page);\n      if (!helper.isEmptyObject(data)) {\n        if (data.hasOwnProperty(\"results\")) {\n          setDataSearch(data.results);\n          setResults(data.total_results);\n          setTotalPage(data.total_pages);\n        }\n      }\n      setLoading(false);\n    }\n  };\n  React.useEffect(() => {\n    const searchFilm = async (keywordSearch) => {\n      if (keywordSearch) {\n        setLoading(true);\n        setKeywordSearch(keywordSearch);\n        const data = await api.searchMovieByKeyword(keywordSearch, page);\n        if (!helper.isEmptyObject(data)) {\n          if (data.hasOwnProperty(\"results\")) {\n            setDataSearch(data.results);\n            setResults(data.total_results);\n            setTotalPage(data.total_pages);\n          }\n        }\n        setLoading(false);\n      }\n    };\n    searchFilm(keywordSearch);\n  }, [keywordSearch, page]);\n  const getDataByPage = (p) => {\n    if (p >= 1 && p <= totalPage) {\n      setPage(p);\n    }\n  };\n  return (\n    <LayoutMovies>\n      <BreadcrumbMovies\n        item_lv1=\"App\"\n        item_lv2=\"Movies\"\n        item_lv3=\"Search-film\"\n      />\n      <div className=\"site-layout-content\">\n        <Row>\n          <Col span={24}>\n            <h3 style={{ textAlign: \"center\" }}>\n              This is search movies page !\n            </h3>\n            <InputSearchMovies search={searchFilm} loading={loading} />\n            {!helper.isEmptyObject(dataSearch) && (\n              <Row style={{ marginTop: \"30px\" }}>\n                {dataSearch.map((item) => (\n                  <Col span={6} key={item.id}>\n                    <CardMovies item={item} />\n                  </Col>\n                ))}\n              </Row>\n            )}\n            {results > 1 && (\n              <Pagination\n                style={{ textAlign: \"center\" }}\n                current={page}\n                defaultCurrent={1}\n                pageSize={20}\n                total={results}\n                onChange={(p) => getDataByPage(p)}\n              />\n            )}\n          </Col>\n        </Row>\n      </div>\n    </LayoutMovies>\n  );\n};\nexport default React.memo(SearchMovies);\n"]},"metadata":{},"sourceType":"module"}