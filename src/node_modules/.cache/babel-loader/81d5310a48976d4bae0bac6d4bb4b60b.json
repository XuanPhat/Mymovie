{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport { helpers } from \"../helpers/common\";\nimport { history } from \"../helpers/history\";\nimport * as types from \"../actions/types\";\nimport * as actions from \"../actions\";\nimport { api } from \"../services/api\";\nimport { apiLogin } from \"../services/login\";\nimport { token } from \"../helpers/token\";\n\nfunction* getProductSaga() {\n  try {\n    yield put(actions.startGetProduct(true));\n    const data = api.getDataProducts;\n\n    if (!helpers.isEmptyObject(data)) {\n      yield put(actions.getProductSuccess(data));\n    }\n  } catch (e) {\n    yield put(actions.getProductFail(e));\n  } finally {\n    yield put(actions.stopGetProduct(false));\n  }\n}\n\nfunction* getDataProductDetail({\n  id\n}) {\n  try {\n    yield put(actions.startGetProductById(true));\n    const data = yield api.getDataProductById(id);\n\n    if (!helpers.isEmptyObject(data)) {\n      yield put(actions.getProductByIdSuccess(data));\n    }\n  } catch (e) {\n    yield put(actions.getProductByIdFail(e));\n  } finally {\n    yield put(actions.stopGetProductById(false));\n  }\n}\n\nfunction* loginUser({\n  email,\n  password\n}) {\n  try {\n    yield put(actions.startStatusLoginAction(true));\n    const data = yield apiLogin.loginUser(email, password);\n\n    if (!helpers.isEmptyObject(data)) {\n      token.saveokenToLocalStorage(data.token);\n      history.push(\"/cart\");\n    } else {\n      yield put(actions.loginFail({\n        cod: 404,\n        message: \"account invalid\"\n      }));\n    }\n  } catch (err) {\n    yield put(actions.loginFail({\n      cod: 500,\n      message: err\n    }));\n  } finally {\n    yield put(actions.startStatusLoginAction(false));\n  }\n}\n\nexport function* WatchProductDataHome() {\n  yield takeEvery(types.Get_DATA_PRODUCT, getProductSaga);\n  yield takeEvery(types.GET_DATA_PRODUCT_BY_ID, getDataProductDetail);\n  yield takeEvery(types.LOGIN_REQUEST, loginUser);\n}\n_c = WatchProductDataHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchProductDataHome\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/shopping/sagas/sagas.js"],"names":["put","takeEvery","helpers","history","types","actions","api","apiLogin","token","getProductSaga","startGetProduct","data","getDataProducts","isEmptyObject","getProductSuccess","e","getProductFail","stopGetProduct","getDataProductDetail","id","startGetProductById","getDataProductById","getProductByIdSuccess","getProductByIdFail","stopGetProductById","loginUser","email","password","startStatusLoginAction","saveokenToLocalStorage","push","loginFail","cod","message","err","WatchProductDataHome","Get_DATA_PRODUCT","GET_DATA_PRODUCT_BY_ID","LOGIN_REQUEST"],"mappings":"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","sourcesContent":["import { put, takeEvery } from \"redux-saga/effects\";\nimport { helpers } from \"../helpers/common\";\nimport { history } from \"../helpers/history\";\nimport * as types from \"../actions/types\";\nimport * as actions from \"../actions\";\n\nimport { api } from \"../services/api\";\nimport { apiLogin } from \"../services/login\";\nimport { token } from \"../helpers/token\";\n\nfunction* getProductSaga() {\n  try {\n    yield put(actions.startGetProduct(true));\n    const data = api.getDataProducts;\n\n    if (!helpers.isEmptyObject(data)) {\n      yield put(actions.getProductSuccess(data));\n    }\n  } catch (e) {\n    yield put(actions.getProductFail(e));\n  } finally {\n    yield put(actions.stopGetProduct(false));\n  }\n}\nfunction* getDataProductDetail({ id }) {\n  try {\n    yield put(actions.startGetProductById(true));\n    const data = yield api.getDataProductById(id);\n    if (!helpers.isEmptyObject(data)) {\n      yield put(actions.getProductByIdSuccess(data));\n    }\n  } catch (e) {\n    yield put(actions.getProductByIdFail(e));\n  } finally {\n    yield put(actions.stopGetProductById(false));\n  }\n}\nfunction* loginUser({ email, password }) {\n  try {\n    yield put(actions.startStatusLoginAction(true));\n    const data = yield apiLogin.loginUser(email, password);\n    if (!helpers.isEmptyObject(data)) {\n      token.saveokenToLocalStorage(data.token);\n      history.push(\"/cart\");\n    } else {\n      yield put(\n        actions.loginFail({\n          cod: 404,\n          message: \"account invalid\",\n        })\n      );\n    }\n  } catch (err) {\n    yield put(\n      actions.loginFail({\n        cod: 500,\n        message: err,\n      })\n    );\n  } finally {\n    yield put(actions.startStatusLoginAction(false));\n  }\n}\n\nexport function* WatchProductDataHome() {\n  yield takeEvery(types.Get_DATA_PRODUCT, getProductSaga);\n  yield takeEvery(types.GET_DATA_PRODUCT_BY_ID, getDataProductDetail);\n  yield takeEvery(types.LOGIN_REQUEST, loginUser);\n}\n"]},"metadata":{},"sourceType":"module"}