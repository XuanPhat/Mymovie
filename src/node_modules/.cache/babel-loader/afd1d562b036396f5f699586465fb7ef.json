{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\shopping\\\\pages\\\\cart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport LayoutShopping from '../../components/Layout';\nimport { Button, InputNumber } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col, Image } from 'antd';\nimport { removetCartAction } from '../../actions';\nimport { changeQuantityCartAction } from '../../actions';\nimport NumberFormat from 'react-number-format';\nimport '../home/style.css';\nimport '../../../shopping/styles/product.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartShopping = () => {\n  _s();\n\n  const productCarts = useSelector(state => state.reducerCart.shoppingCart);\n  const dispatch = useDispatch();\n\n  const getTotal = () => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      let result = productCarts.reduce((total, item) => total + item.shoppingCart.price * item.shoppingCart.quantity * 100 / 100, 0);\n      return result;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(LayoutShopping, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image_header_shoppingcart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        offset: 6,\n        style: {\n          width: 1137\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              width: 201\n            },\n            children: \"PRODUCTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              width: 415\n            },\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              width: 201\n            },\n            children: \"PRICE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              width: 201\n            },\n            children: \"QTY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartShopping, \"Zk7JO5AKG6veqX0R2vUCOE866Fk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartShopping;\nexport default _c2 = /*#__PURE__*/React.memo(CartShopping);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartShopping\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/shopping/pages/cart/index.js"],"names":["React","LayoutShopping","Button","InputNumber","useSelector","useDispatch","Row","Col","Image","removetCartAction","changeQuantityCartAction","NumberFormat","CartShopping","productCarts","state","reducerCart","shoppingCart","dispatch","getTotal","result","reduce","total","item","price","quantity","width","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAAgC,MAAhC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,wBAAT,QAAyC,eAAzC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,mBAAP;AACA,OAAO,sCAAP;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,YAAY,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBC,YAA5B,CAAhC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,QAAQ,GAAG,MAAM;AACrB;AACA;AACE,UAAIC,MAAM,GAAGN,YAAY,CAACO,MAAb,CACX,CAACC,KAAD,EAAQC,IAAR,KACED,KAAK,GACJC,IAAI,CAACN,YAAL,CAAkBO,KAAlB,GAA0BD,IAAI,CAACN,YAAL,CAAkBQ,QAA5C,GAAuD,GAAxD,GAA+D,GAHtD,EAIX,CAJW,CAAb;AAOA,aAAOL,MAAP;AACD;AACF,GAZD;;AAaA,sBACE,QAAC,cAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAe,QAAA,MAAM,EAAE,CAAvB;AAA0B,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAjC;AAAA,+BACE,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,GAAD;AAAK,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4FD,CA5GD;;GAAMb,Y;UACiBR,W,EACJC,W;;;KAFbO,Y;AA6GN,kCAAeZ,KAAK,CAAC0B,IAAN,CAAWd,YAAX,CAAf","sourcesContent":["import React from 'react';\nimport LayoutShopping from '../../components/Layout';\nimport { Button, InputNumber } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col, Image } from 'antd';\nimport { removetCartAction } from '../../actions';\nimport { changeQuantityCartAction } from '../../actions';\nimport NumberFormat from 'react-number-format';\nimport '../home/style.css';\nimport '../../../shopping/styles/product.css';\nconst CartShopping = () => {\n  const productCarts = useSelector(state => state.reducerCart.shoppingCart);\n  const dispatch = useDispatch();\n  const getTotal = () => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      let result = productCarts.reduce(\n        (total, item) =>\n          total +\n          (item.shoppingCart.price * item.shoppingCart.quantity * 100) / 100,\n        0\n      );\n\n      return result;\n    }\n  };\n  return (\n    <LayoutShopping>\n      <div className=\"image_header_shoppingcart\"></div>\n      <Row>\n        <Col span={12} offset={6} style={{ width: 1137 }}>\n          <Row>\n            <Col style={{ width: 201 }}>PRODUCTS</Col>\n            <Col style={{ width: 415 }}>NAME</Col>\n            <Col style={{ width: 201 }}>PRICE</Col>\n            <Col style={{ width: 201 }}>QTY</Col>\n            <Col>TOTAL</Col>\n          </Row>\n        </Col>\n      </Row>\n      {/* <Row>\n        <Col span={24}>\n          {productCarts.length === 0 && (\n            <h1> Bạn chưa có sản phẩm trong giỏ hàng</h1>\n          )}\n\n          {productCarts.map((item, index) => (\n            <Row\n              key={index}\n              style={{\n                margin: '15px 0px',\n                border: '1px solid #ccc',\n                padding: '10px'\n              }}\n            >\n              <Col sm={12} xs={12} md={4}>\n                <Image src={item.shoppingCart.image} />\n              </Col>\n              <Col span={10} offset={1}>\n                <h4> {item.shoppingCart.name}</h4>\n                <NumberFormat\n                  value={item.shoppingCart.price}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                  suffix=\" ₫\"\n                  prefix=\"Price: \"\n                />\n                <p>\n                  <NumberFormat\n                    value={item.shoppingCart.price * item.shoppingCart.quantity}\n                    displayType={'text'}\n                    thousandSeparator={true}\n                    suffix=\" ₫\"\n                    style={{ fontWeight: 'bold' }}\n                    prefix=\"Money: \"\n                  />\n                </p>\n                <br />\n                <InputNumber\n                  min={1}\n                  max={30}\n                  value={item.shoppingCart.quantity}\n                  onChange={value => {\n                    dispatch(\n                      changeQuantityCartAction(value, item.shoppingCart.id)\n                    );\n                  }}\n                />\n                <Button\n                  type=\"dashed\"\n                  onClick={() =>\n                    dispatch(removetCartAction(item.shoppingCart.id, 1))\n                  }\n                >\n                  Xóa{' '}\n                </Button>\n              </Col>\n            </Row>\n          ))}\n          <div style={{ clear: 'both' }}></div>\n          {getTotal() > 0 && (\n            <h3 style={{ float: 'right' }}>\n              <NumberFormat\n                value={getTotal()}\n                displayType={'text'}\n                style={{ color: 'red', fontWeight: 'bold' }}\n                thousandSeparator={true}\n                suffix=\" ₫\"\n                prefix=\"Tổng Cộng: \"\n              />\n            </h3>\n          )}\n          <div style={{ clear: 'both' }}></div>\n        </Col>\n      </Row> */}\n      {/* <p>HEHEE</p> */}\n    </LayoutShopping>\n  );\n};\nexport default React.memo(CartShopping);\n"]},"metadata":{},"sourceType":"module"}