{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\hooks\\\\movies\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ListMovies from './components/ListMovies';\nimport { api } from './services/api';\nimport { helper } from './helpers/common';\nimport { Skeleton, Pagination, Row, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const [movies, setListMovies] = React.useState({});\n  const [page, setPage] = React.useState(1);\n  const [totalresult, setTotalResult] = React.useState(0); // trong class component,minh call api trong componentdidmount\n  // trong function thi dung useeffect\n\n  useEffect(() => {\n    const getDataApi = async () => {\n      // setstate\n      setLoading(true);\n      const data = await api.getDataMovies(page);\n\n      if (!helper.isEmptyObject(data)) {\n        if (data.hasOwnProperty('results')) {\n          setListMovies(data.results);\n        }\n\n        if (data.hasOwnProperty('total_results')) {\n          setTotalResult(data.total_results);\n        }\n      }\n\n      setLoading(false);\n    };\n\n    getDataApi();\n  }, []); //  mang rong\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading || helper.isEmptyObject(movies) ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(ListMovies, {\n          movies: movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          defaultCurrent: 6,\n          total: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"Ssb5s6KKXSDFS9pVL+fHURVd9AA=\");\n\n_c = App;\nexport default _c2 = /*#__PURE__*/React.memo(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/hooks/movies/App.js"],"names":["React","useEffect","ListMovies","api","helper","Skeleton","Pagination","Row","Col","App","loading","setLoading","useState","movies","setListMovies","page","setPage","totalresult","setTotalResult","getDataApi","data","getDataMovies","isEmptyObject","hasOwnProperty","results","total_results","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,MAA/C;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,MAAD,EAASC,aAAT,IAA0Bd,KAAK,CAACY,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBhB,KAAK,CAACY,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgClB,KAAK,CAACY,QAAN,CAAe,CAAf,CAAtC,CAJiB,CAKjB;AACA;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMkB,UAAU,GAAG,YAAY;AAC9B;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMS,IAAI,GAAG,MAAMjB,GAAG,CAACkB,aAAJ,CAAkBN,IAAlB,CAAnB;;AACA,UAAI,CAACX,MAAM,CAACkB,aAAP,CAAqBF,IAArB,CAAL,EAAiC;AAChC,YAAIA,IAAI,CAACG,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AACnCT,UAAAA,aAAa,CAACM,IAAI,CAACI,OAAN,CAAb;AACA;;AACD,YAAIJ,IAAI,CAACG,cAAL,CAAoB,eAApB,CAAJ,EAA0C;AACzCL,UAAAA,cAAc,CAACE,IAAI,CAACK,aAAN,CAAd;AACA;AACD;;AAEDd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAdD;;AAeAQ,IAAAA,UAAU;AACV,GAjBQ,EAiBN,EAjBM,CAAT,CAPiB,CAwBT;;AAER,sBACC;AAAA,cACET,OAAO,IAAIN,MAAM,CAACkB,aAAP,CAAqBT,MAArB,CAAX,gBACA,QAAC,QAAD;AAAU,MAAA,MAAM;AAAhB;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA,QAAC,GAAD;AAAA,6BACC,QAAC,GAAD;AAAA,gCACC,QAAC,UAAD;AAAY,UAAA,MAAM,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,UAAD;AAAY,UAAA,cAAc,EAAE,CAA5B;AAA+B,UAAA,KAAK,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAJF,mBADD;AAcA,CAxCD;;GAAMJ,G;;KAAAA,G;AA0CN,kCAAeT,KAAK,CAAC0B,IAAN,CAAWjB,GAAX,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ListMovies from './components/ListMovies';\r\nimport { api } from './services/api';\r\nimport { helper } from './helpers/common';\r\nimport { Skeleton, Pagination, Row, Col } from 'antd';\r\n\r\nconst App = () => {\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\tconst [movies, setListMovies] = React.useState({});\r\n\tconst [page, setPage] = React.useState(1);\r\n\tconst [totalresult, setTotalResult] = React.useState(0);\r\n\t// trong class component,minh call api trong componentdidmount\r\n\t// trong function thi dung useeffect\r\n\tuseEffect(() => {\r\n\t\tconst getDataApi = async () => {\r\n\t\t\t// setstate\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst data = await api.getDataMovies(page);\r\n\t\t\tif (!helper.isEmptyObject(data)) {\r\n\t\t\t\tif (data.hasOwnProperty('results')) {\r\n\t\t\t\t\tsetListMovies(data.results);\r\n\t\t\t\t}\r\n\t\t\t\tif (data.hasOwnProperty('total_results')) {\r\n\t\t\t\t\tsetTotalResult(data.total_results);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t};\r\n\t\tgetDataApi();\r\n\t}, []); //  mang rong\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading || helper.isEmptyObject(movies) ? (\r\n\t\t\t\t<Skeleton active />\r\n\t\t\t) : (\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<ListMovies movies={movies} />\r\n\t\t\t\t\t\t<Pagination defaultCurrent={6} total={500} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(App);\r\n"]},"metadata":{},"sourceType":"module"}