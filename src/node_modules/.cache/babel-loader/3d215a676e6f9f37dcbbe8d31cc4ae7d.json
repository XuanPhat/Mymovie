{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\reactjsstart\\\\my-app\\\\src\\\\todo\\\\App.js\";\nimport React from 'react';\nimport LayoutTodo from './components/layout';\nimport InputTodo from './components/input-todo';\nimport ButtonAddTodo from './components/button-add-todo';\nimport ListTodo from './components/list-todo';\nimport HeaderTodo from './components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getNameTodo = event => {\n      // event : su kien tuong tac cua nguoi dung voi thanh phan the input\n      // tu event: lay ra dc gia tri data nam trong thanh phan input\n      let nameTodo = event.target.value; // kien thuc cua JS\n      // cap nhat nameTodo vao trong state\n\n      if (nameTodo.length > 0 && nameTodo !== '') {\n        this.setState({\n          name: nameTodo\n        });\n      }\n    };\n\n    this.handleAddTodo = () => {\n      // kiem tra state name todo co du lieu ko?\n      if (this.state.name !== '') {\n        // cap nhat id cong viec: moi lan tang id cong viec len, \n        // dam bao ko id nao trung nhau\n        // ham this.setState: no nhan vao la 1 object hoac la 1 function\n        this.setState(state => ({\n          id: state.id + 1\n        }));\n        const newTodo = {\n          nameWork: this.state.name,\n          idWork: this.state.id,\n          done: false\n        };\n        this.setState(state => ({\n          todo: [...state.todo, newTodo],\n          // do them cong viec moi vao mang cong viec da ton tai\n          name: '' // xoa cong viec vua nhap\n\n        }));\n      }\n    };\n\n    this.removeItemTodo = id => {\n      // id: biet dc la can xoa cong viec nao trong dach sach cong viec\n      // lam the nao de xoa ?\n      // id : da co\n      // danh sach cong viec: this.state.todo\n      // tra ve mot mang moi: trong mang do khong chua object cong viec chua id da xoa\n      const newListItems = this.state.todo.filter(item => item.idWork !== id); // sau do cap nhai lai nguyen state todo\n\n      this.setState({\n        todo: newListItems\n      });\n    };\n\n    this.finishItemTodo = id => {\n      // can update key \"done\" tu true <=> false trong object item cua mang state todo theo dung id truyen len !\n      // khong dc phep lam mat hay them item cong viec\n      const upTodo = this.state.todo.map(item => item.idWork === id ? { ...item,\n        done: !item.done\n      } : item);\n      this.setState({\n        todo: upTodo\n      });\n    };\n\n    this.state = {\n      name: '',\n      // ten cong viec\n      id: 1,\n      // ma cong viec\n      todo: [] // mang luu tat ca cong viec\n\n    };\n  } // luu dc du lieu nguoi dung nhap vao o input vao trong state cua minh\n\n\n  render() {\n    //console.log(this.state.todo);\n    return /*#__PURE__*/_jsxDEV(LayoutTodo, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputTodo, {\n        change: this.getNameTodo,\n        val: this.state.name,\n        type: \"text\",\n        name: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonAddTodo, {\n        click: this.handleAddTodo,\n        children: \" Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListTodo, {\n        list: this.state.todo,\n        del: this.removeItemTodo,\n        finish: this.finishItemTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["D:/ReactJS/reactjsstart/my-app/src/todo/App.js"],"names":["React","LayoutTodo","InputTodo","ButtonAddTodo","ListTodo","HeaderTodo","TodoApp","Component","constructor","props","getNameTodo","event","nameTodo","target","value","length","setState","name","handleAddTodo","state","id","newTodo","nameWork","idWork","done","todo","removeItemTodo","newListItems","filter","item","finishItemTodo","upTodo","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LayoutTodo from './components/layout';\nimport InputTodo from './components/input-todo';\nimport ButtonAddTodo from './components/button-add-todo';\nimport ListTodo from './components/list-todo';\nimport HeaderTodo from './components/header';\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',  // ten cong viec\n      id: 1, // ma cong viec\n      todo: [] // mang luu tat ca cong viec\n    }\n  }\n  // luu dc du lieu nguoi dung nhap vao o input vao trong state cua minh\n  getNameTodo = (event) => {\n    // event : su kien tuong tac cua nguoi dung voi thanh phan the input\n    // tu event: lay ra dc gia tri data nam trong thanh phan input\n    let nameTodo = event.target.value; // kien thuc cua JS\n    // cap nhat nameTodo vao trong state\n    if(nameTodo.length > 0 && nameTodo !== ''){\n      this.setState({name: nameTodo});\n    }\n  }\n\n  // xu ly viec nguoi bam button add\n  handleAddTodo = () => {\n    // kiem tra state name todo co du lieu ko?\n    if(this.state.name !== ''){\n      // cap nhat id cong viec: moi lan tang id cong viec len, \n      // dam bao ko id nao trung nhau\n      // ham this.setState: no nhan vao la 1 object hoac la 1 function\n      this.setState(state => ({id: state.id + 1}) );\n      const newTodo = {\n        nameWork: this.state.name,\n        idWork: this.state.id,\n        done: false\n      }\n      this.setState(state => ({\n        todo: [...state.todo, newTodo], // do them cong viec moi vao mang cong viec da ton tai\n        name: '' // xoa cong viec vua nhap\n      }))\n    }\n  }\n\n  // xoa item todo\n  removeItemTodo = (id) => {\n    // id: biet dc la can xoa cong viec nao trong dach sach cong viec\n    // lam the nao de xoa ?\n    // id : da co\n    // danh sach cong viec: this.state.todo\n    // tra ve mot mang moi: trong mang do khong chua object cong viec chua id da xoa\n    const newListItems = this.state.todo.filter(item => item.idWork !== id);\n    // sau do cap nhai lai nguyen state todo\n    this.setState({ todo: newListItems });\n  }\n\n  // finish item todo\n  finishItemTodo = (id) => {\n    // can update key \"done\" tu true <=> false trong object item cua mang state todo theo dung id truyen len !\n\n    // khong dc phep lam mat hay them item cong viec\n    const upTodo = this.state.todo.map(item => item.idWork === id ? {...item, done: !item.done} : item);\n    this.setState({ todo: upTodo });\n\n  }\n\n  render() {\n    //console.log(this.state.todo);\n    return(\n      <LayoutTodo>\n        <HeaderTodo/>\n        <InputTodo\n          change={this.getNameTodo}\n          val={this.state.name}\n          type=\"text\"\n          name=\"add\"\n        />\n        <ButtonAddTodo\n          click={this.handleAddTodo}\n        > Add </ButtonAddTodo>\n        <ListTodo\n          list={this.state.todo}\n          del={this.removeItemTodo}\n          finish={this.finishItemTodo}\n        />\n      </LayoutTodo>\n    )\n  }\n}\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}